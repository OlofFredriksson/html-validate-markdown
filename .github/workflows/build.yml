name: Build

on: [push, pull_request]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x, 18.x, 22.x]

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm ci
            - run: npm run build
            - run: npm run lint
            - run: npm test
              env:
                  CI: true

    html-validate:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                html-validate: [5.x, 6.x, 7.x, 8.x]

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js 16
              uses: actions/setup-node@v3
              with:
                  node-version: 20.x
            - name: Build
              run: |
                  npm ci
                  npm run build
            - name: Install html-validate ${{ matrix.html-validate }}
              run: |
                  test "${{ matrix.html-validate }}" -ge "7" || npm install jest@29 ts-jest@29
                  npm install $(npx -y npm-min-peer html-validate --major ${{ matrix.html-validate }} --with-name)
                  npm ls html-validate
            - name: Integration test
              run: |
                  if [[ "${{ matrix.html-validate }}" != "8.x" ]]; then for filename in test/*.spec.ts test/__snapshots__/*.snap; do echo "${filename}"; sed 's/\(<.*>\) element \(is not permitted as content\) under /Element \1 \2 in /g' -i "${filename}"; done; fi
                  for spec in test/*.spec.ts; do sed 's#../src#../dist#g' -i "${spec}"; done
                  sed '/dist/s#jest.mock#//#' -i "test/htmlvalidate.spec.ts"
                  npm test -- --no-coverage test
              env:
                  CI: true
